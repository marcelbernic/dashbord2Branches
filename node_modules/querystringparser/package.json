{
  "name": "querystringparser",
  "description": "Extremely fast querystring parser",
  "version": "0.1.1",
  "keywords": [
    "qs",
    "querystring",
    "query-string",
    "form-encoding",
    "request-body",
    "parse",
    "parser",
    "serialize",
    "serializer",
    "key-value"
  ],
  "scripts": {
    "test": "grunt test"
  },
  "homepage": "https://github.com/petkaantonov/querystringparser",
  "repository": {
    "type": "git",
    "url": "git://github.com/petkaantonov/querystringparser.git"
  },
  "bugs": {
    "url": "http://github.com/petkaantonov/querystringparser/issues"
  },
  "license": "MIT",
  "author": {
    "name": "Petka Antonov",
    "email": "petka_antonov@hotmail.com",
    "url": "http://github.com/petkaantonov/"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.4",
    "jshint-stylish": "latest",
    "acorn": "~0.3.1",
    "grunt-bump": "0.0.11",
    "mocha": "~1.12.1",
    "grunt-cli": "~0.1.9",
    "expect.js": "latest",
    "qs": "latest",
    "bluebird": "~0.10",
    "benchmark": "latest"
  },
  "readmeFilename": "README.md",
  "main": "./js/querystringparser.js",
  "readme": "[![Build Status](https://travis-ci.org/petkaantonov/querystringparser.png?branch=master)](https://travis-ci.org/petkaantonov/querystringparser)\n\n#Introduction\n\nExtremely fast querystring parser with same API and semantics as [`qs`](http://npmjs.org/package/qs) + DoS Protection.\n\n#Quick start\n\n    npm install querystringparser\n\n```js\nvar querystringparser = require(\"querystringparser\");\nquerystringparser.parse(\"foo=bar\");\n```\n\n#API\n\nExactly the same API and semantics are implemented 100% to make comparison fair.\n\nDoS protection checks for input length, amount of total keys and maximum nesting depth of keys.\n\n```js\nvar qs = require(\"querystringparser\");\nqs.maxLength //Maximum amount of characters in the input string to parse: 32768\nqs.maxKeys //Maximum amount of key-value pairs in the query string: 256\nqs.maxDepth //Maximum nesting depth of keys: 4 e.g. a[b][c][d]=3\n```\n\na `RangeError` is thrown when these limits are reached.\n\n#Performance\n\nTo run benchmarks run the `bench` bash script while on the project root.\n\nPlatform info:\n\n    Windows_NT 6.1.7601 x64\n    Node.JS 0.11.8\n    V8 3.21.18.3\n    Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz × 4\n\n#Parse\n\nInput:\n\n    a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&\n    a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&\n    a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&\n    a[]=3&a[]=3&a[]=3&a[]=3&a[ ]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3\n    &a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3\n    &a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3\n    &a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]= 3&a[]=3&a[]=3&a[]=3&a[]=\n    3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=\n    3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=\n    3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=\n    3& a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3&a[]=3\n\nResults:\n\n    querystringparser x 45,415 ops/sec ±0.10% (103 runs sampled)\n    qs x 3,372 ops/sec ±0.16% (100 runs sampled)\n\nInput:\n\n    foo=bar\n\nResults:\n\n    querystringparser x 1,708,245 ops/sec ±0.14% (97 runs sampled)\n    qs x 331,300 ops/sec ±0.19% (101 runs sampled)\n\nInput:\n\n    user[name][first]=tj&user[name][last]=holowaychuk\n\nResults:\n\n    querystringparser x 336,640 ops/sec ±0.13% (95 runs sampled)\n    qs x 77,368 ops/sec ±0.16% (100 runs sampled)\n\nInput:\n\n    a[]=1&a[]=2&a[]=3\n\nResults:\n\n    querystringparser x 1,418,693 ops/sec ±0.14% (98 runs sampled)\n    qs x 96,978 ops/sec ±0.14% (100 runs sampled)\n\n\n#Stringify\n\nInput:\n\n    {\"cht\":\"p3\",\"chd\":\"t:60,40\",\"chs\":\"250x100\",\"chl\":\"Hello|World\"}\n\nResults:\n\n    querystringparser x 282,700 ops/sec ±0.21% (99 runs sampled)\n    qs x 220,947 ops/sec ±0.26% (101 runs sampled)\n\nInput:\n\n    {\"foo\":[\"bar\"],\"baz\":[\"1\",\"2\",\"3\"]}\n\nResults:\n\n    querystringparser x 558,012 ops/sec ±0.42% (94 runs sampled)\n    qs x 410,148 ops/sec ±0.31% (98 runs sampled)\n\nInput:\n\n    {\"x\":{\"y\":[{\"z\":\"1\",\"w\":\"2\"}]}}\n\nResults:\n\n    querystringparser x 479,991 ops/sec ±0.13% (99 runs sampled)\n    qs x 346,668 ops/sec ±0.21% (99 runs sampled)\n\nInput:\n\n    {\"foo\":\"bar\",\"bar\":\"baz\"}\n\nResults:\n\n    querystringparser x 999,859 ops/sec ±0.19% (97 runs sampled)\n    qs x 690,273 ops/sec ±0.43% (96 runs sampled)\n\n",
  "_id": "querystringparser@0.1.1",
  "_from": "querystringparser@^0.1.1"
}
